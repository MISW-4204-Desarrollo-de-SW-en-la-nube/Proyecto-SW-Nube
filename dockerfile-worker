# Use the official Python image from the Docker Hub
FROM python:3.11.9-alpine

# set work directory
WORKDIR /app

#  Install the required dependencies
RUN pip install --upgrade pip
COPY requirements.txt requirements.txt
RUN pip install --no-cache-dir --upgrade -r requirements.txt


# Instalar psycopg2 para interactuar con PostgreSQL
RUN apk add --no-cache postgresql-libs && \
    apk add --no-cache --virtual .build-deps gcc musl-dev postgresql-dev && \
    pip install psycopg2-binary && \    
    apk --purge del .build-deps 
RUN apk add --no-cache ffmpeg

# INSTALAR GOOGLE CLOUD SDK
RUN curl -O https://dl.google.com/dl/cloudsdk/channels/rapid/downloads/google-cloud-cli-471.0.0-linux-x86_64.tar.gz && \
    tar zxvf google-cloud-cli-471.0.0-linux-x86_64.tar.gz && \
    ./google-cloud-sdk/install.sh --quiet && \
    rm google-cloud-cli-471.0.0-linux-x86_64.tar.gz

# CONFIGURAR EL PATH DE GOOGLE CLOUD SDK
ENV PATH="/app/google-cloud-sdk/bin:$PATH"

# INSTALAR gsutil 
RUN gcloud components install gsutil --quiet

# Copia todo el contenido del directorio actual al contenedor en /app
COPY ./app /app/app
COPY ./job /app/job
COPY ./public /app/public


# Dar permisos de ejecuci√≥n al script
RUN chmod +x /app/job/process.sh

# celery --app      gevent 
# CMD ["celery", "-A", "tasks", "worker", "--loglevel=info"]
CMD ["celery", "-A", "job.celery_app", "worker", "-l", "info", "-P", "gevent"]

